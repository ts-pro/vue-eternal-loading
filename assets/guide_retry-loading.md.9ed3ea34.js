import{_ as s,c as a,o,a as e,b as n}from"./app.9013c3dc.js";const g=JSON.parse('{"title":"Retry loading","description":"","frontmatter":{},"headers":[],"relativePath":"guide/retry-loading.md"}'),l={name:"guide/retry-loading.md"},t=e(`<h1 id="retry-loading" tabindex="-1">Retry loading <a class="header-anchor" href="#retry-loading" aria-hidden="true">#</a></h1><p>Normally if you reached states <code>no-more</code>, <code>no-results</code> or <code>error</code> you have the only choice to restart <code>vue-eternal-loading</code> - use <code>isInitial</code> prop. It will reset <code>isFirstLoad</code> state also, which might be not what you want. If you caught an error, or reached the end and want to retry loading - you can use <code>retry</code> method which is available in <code>no-more</code>, <code>no-results</code> and <code>error</code> slots. There is an example of how you can implement <code>retry</code> button if you caught an error:</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">VueEternalLoading</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:load</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">load</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">#error</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ retry }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        Oops. We&#39;ve got an error.</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">retry</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Try again</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">VueEternalLoading</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,3),r=n("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/gavrashenko/xhtg6L92/4/embedded/result/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"},null,-1),p=[t,r];function c(d,y,i,D,F,u){return o(),a("div",null,p)}const _=s(l,[["render",c]]);export{g as __pageData,_ as default};
