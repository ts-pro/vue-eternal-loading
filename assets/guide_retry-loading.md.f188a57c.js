import{_ as s,c as a,o as e,a as o,b as n}from"./app.9013c3dc.js";const u=JSON.parse('{"title":"Retry loading","description":"","frontmatter":{},"headers":[],"relativePath":"guide/retry-loading.md"}'),t={name:"guide/retry-loading.md"},l=o(`<h1 id="retry-loading" tabindex="-1">Retry loading <a class="header-anchor" href="#retry-loading" aria-hidden="true">#</a></h1><p>Typically, when you encounter the <strong>no-more</strong>, <strong>no-results</strong>, or <strong>error</strong> states in <strong>vue-eternal-loading</strong>, your only option to restart the component is by using the <code>isInitial</code> prop. However, it&#39;s important to note that using the <code>isInitial</code> prop will also reset the <code>isFirstLoad</code> state, which may not always be desired. In scenarios where you have caught an error or reached the end and want to retry the loading process, you can utilize the <code>retry</code> method available within the <code>#no-more</code>, <code>#no-results</code>, and <code>#error</code> slots.</p><p>Here&#39;s an example demonstrating how you can implement a retry button when an error is caught:</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">VueEternalLoading</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:load</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">load</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">#error</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ retry }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        Oops. We&#39;ve got an error.</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">retry</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Try again</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">VueEternalLoading</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,4),r=n("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/gavrashenko/xhtg6L92/8/embedded/result/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"},null,-1),p=[l,r];function c(i,d,y,D,F,g){return e(),a("div",null,p)}const _=s(t,[["render",c]]);export{u as __pageData,_ as default};
