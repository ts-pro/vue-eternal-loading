import{_ as o,c as a,o as s,a as e,b as n}from"./app.9013c3dc.js";const D=JSON.parse('{"title":"Loader margin","description":"","frontmatter":{},"headers":[],"relativePath":"guide/loader-margin.md"}'),r={name:"guide/loader-margin.md"},t=e(`<h1 id="loader-margin" tabindex="-1">Loader margin <a class="header-anchor" href="#loader-margin" aria-hidden="true">#</a></h1><p>In previous examples <code>load</code> prop was triggered when loader was visible on screen or in your container element ( depends on <code>container</code> prop ). Sometimes you may want to start loading a little earlier to make loading process more seamless for a user. It is possible with prop <code>margin</code> which can accept params in pixels or percents as string ( it will be passed to <code>IntersectionObserver</code> as <code>rootMargin</code> param under the hood, so you can find all formats <a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin" target="_blank" rel="noreferrer">here</a> ). Specifying <code>margin</code> as one value ( e.g. <code>200px</code> ) in pixels may cover the most common cases, so it&#39;s not important to learn other formats:</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">VueEternalLoading</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:load</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">load</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">margin</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">200px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">VueEternalLoading</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,3),l=n("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/gavrashenko/omf723ve/48/embedded/result/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"},null,-1),c=e("<p>In the example above we are created <code>200px</code> invisible bounding box around our <code>VueEternalLoading</code> component markup. Now <code>load</code> prop will be triggered on <code>200px</code> earlier ( like if it was <code>200px</code> bigger in all directions ).</p><p>The important thing is that <code>margin</code> prop won&#39;t affect your layout anyhow unlike <code>css margin</code> which pushes content if you will specify it.</p>",2),p=[t,l,c];function i(d,m,_,g,u,h){return s(),a("div",null,p)}const f=o(r,[["render",i]]);export{D as __pageData,f as default};
