import{_ as a,c as s,o as e,a as o,b as n}from"./app.9013c3dc.js";const h=JSON.parse('{"title":"Preloaded data","description":"","frontmatter":{},"headers":[],"relativePath":"guide/preloaded-data.md"}'),l={name:"guide/preloaded-data.md"},t=o(`<h1 id="preloaded-data" tabindex="-1">Preloaded data <a class="header-anchor" href="#preloaded-data" aria-hidden="true">#</a></h1><p>Normally <strong>vue-eternal-loading</strong> call <code>load</code> prop when you need to get data from server. But there can be a case when we already have preloaded data ( e.g. from cache, from other request, etc... ). In this case if we render our preloaded data and put <strong>vue-eternal-loader</strong> next to it as usual, it doesn&#39;t know about your data, and will behave like it&#39;s your first loading. It can lead to unwanted results, when you can get <strong>no-results</strong> state even if you have data. Or we will have wrong <code>isFirstLoad</code> prop in <code>#loading</code> slot.</p><p>To prevent this behaviour you need to pass falsy <code>isInitial</code> prop.</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">VueEternalLoading</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:load</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">load</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:is-initial</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">false</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">VueEternalLoading</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>Or you can pass it using v-model if you want to implement reset logics from the previous section as well.</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#676E95;">&lt;!-- isIntial should be false --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">VueEternalLoading</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:load</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">load</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:is-initial</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">isInitial</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">VueEternalLoading</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,6),p=n("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/gavrashenko/tms5g870/19/embedded/result/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"},null,-1),r=[t,p];function d(c,i,u,D,y,F){return e(),s("div",null,r)}const _=a(l,[["render",d]]);export{h as __pageData,_ as default};
